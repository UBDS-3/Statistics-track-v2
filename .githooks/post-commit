#!/usr/bin/env bash
set -euo pipefail

# Only run on source branch
[[ $(git rev-parse --abbrev-ref HEAD) == "source" ]] || exit 0

if [[ "${RENDER_AUTO:-false}" == "true" ]]; then
    # Get parent directories of changed .qmd files, remove duplicates
    labs=$(git diff-tree --no-commit-id --name-only -r HEAD |
       grep '^labs/.*\.qmd$' |
       cut -d'/' -f2 |
       sort -u |
       xargs)

    # Run render if we have directories to render
    [[ -n "$labs" ]] && ./render.sh --type all --lab $labs
fi

# Exit if no HTML files to commit
find labs -name "*.html" ! -name "*.solved.html" -type f | grep -q . || exit 0

# Create temp branch and commit HTML files
TEMP="render-update"
git switch --quiet -c "$TEMP"
git add 'labs/**/*.html' ':(exclude)labs/**/*.solved.html'
git commit --quiet -m "Render update"

# Checkout files to master and commit
git switch master --quiet
git checkout --quiet "$TEMP" -- 'labs/**/*.html' ':(exclude)labs/**/*.solved.html'
git commit -m "Add rendered labs (from source@$(git rev-parse --short source))"

# Clean up
git switch --quiet source
git branch --quiet -D "$TEMP"
